// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using SmartRecipes.Server.DataContext.Recipes;

#nullable disable

namespace DataContextMigrationsRecipes
{
    [DbContext(typeof(RecipesContext))]
    [Migration("20240222183621_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("SmartRecipes.Server.DataContext.Recipes.Models.Category", b =>
                {
                    b.Property<string>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("text");

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.HasKey("ID");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("SmartRecipes.Server.DataContext.Recipes.Models.Image", b =>
                {
                    b.Property<string>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("text");

                    b.Property<byte[]>("ImageData")
                        .IsRequired()
                        .HasColumnType("BLOB");

                    b.Property<string>("ImageName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("ID");

                    b.ToTable("Images");
                });

            modelBuilder.Entity("SmartRecipes.Server.DataContext.Recipes.Models.Ingredient", b =>
                {
                    b.Property<string>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("text");

                    b.Property<string>("IngredientName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("TEXT");

                    b.Property<int>("Price")
                        .HasColumnType("integer");

                    b.HasKey("ID");

                    b.ToTable("Ingredients");
                });

            modelBuilder.Entity("SmartRecipes.Server.DataContext.Recipes.Models.IngredientAmountForRecipe", b =>
                {
                    b.Property<string>("IngredientID")
                        .HasColumnType("text");

                    b.Property<string>("RecipeID")
                        .HasColumnType("text");

                    b.Property<string>("Amount")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("text")
                        .HasDefaultValueSql("0 кг");

                    b.HasKey("IngredientID", "RecipeID");

                    b.HasIndex("RecipeID");

                    b.ToTable("IngredientAmounts");
                });

            modelBuilder.Entity("SmartRecipes.Server.DataContext.Recipes.Models.IngredientPriceForShop", b =>
                {
                    b.Property<string>("IngredientID")
                        .HasColumnType("text");

                    b.Property<string>("ShopID")
                        .HasColumnType("text");

                    b.Property<double>("Price")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("double precision")
                        .HasDefaultValueSql("0");

                    b.HasKey("IngredientID", "ShopID");

                    b.HasIndex("ShopID");

                    b.ToTable("IngredientPrices");
                });

            modelBuilder.Entity("SmartRecipes.Server.DataContext.Recipes.Models.Recipe", b =>
                {
                    b.Property<string>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("text");

                    b.Property<string>("CategoryID")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Rating")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("RecipeDescription")
                        .IsRequired()
                        .HasMaxLength(6400)
                        .HasColumnType("character varying(6400)");

                    b.Property<string>("RecipeName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.Property<float>("TimeToCook")
                        .HasColumnType("real");

                    b.Property<int>("TimesVisited")
                        .HasColumnType("integer");

                    b.HasKey("ID");

                    b.HasIndex("CategoryID");

                    b.ToTable("Recipes");
                });

            modelBuilder.Entity("SmartRecipes.Server.DataContext.Recipes.Models.Shop", b =>
                {
                    b.Property<string>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("text");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.ToTable("Shops");
                });

            modelBuilder.Entity("SmartRecipes.Server.DataContext.Recipes.Models.Image", b =>
                {
                    b.HasOne("SmartRecipes.Server.DataContext.Recipes.Models.Recipe", "Recipe")
                        .WithOne("RecipeImage")
                        .HasForeignKey("SmartRecipes.Server.DataContext.Recipes.Models.Image", "ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Recipe");
                });

            modelBuilder.Entity("SmartRecipes.Server.DataContext.Recipes.Models.IngredientAmountForRecipe", b =>
                {
                    b.HasOne("SmartRecipes.Server.DataContext.Recipes.Models.Recipe", null)
                        .WithMany("IngredientAmounts")
                        .HasForeignKey("IngredientID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SmartRecipes.Server.DataContext.Recipes.Models.Ingredient", null)
                        .WithMany("IngredientAmounts")
                        .HasForeignKey("RecipeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SmartRecipes.Server.DataContext.Recipes.Models.IngredientPriceForShop", b =>
                {
                    b.HasOne("SmartRecipes.Server.DataContext.Recipes.Models.Shop", null)
                        .WithMany("IngredientPrices")
                        .HasForeignKey("IngredientID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SmartRecipes.Server.DataContext.Recipes.Models.Ingredient", null)
                        .WithMany("IngredientPrices")
                        .HasForeignKey("ShopID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SmartRecipes.Server.DataContext.Recipes.Models.Recipe", b =>
                {
                    b.HasOne("SmartRecipes.Server.DataContext.Recipes.Models.Category", "Category")
                        .WithMany("RecipesWhereUsed")
                        .HasForeignKey("CategoryID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("SmartRecipes.Server.DataContext.Recipes.Models.Category", b =>
                {
                    b.Navigation("RecipesWhereUsed");
                });

            modelBuilder.Entity("SmartRecipes.Server.DataContext.Recipes.Models.Ingredient", b =>
                {
                    b.Navigation("IngredientAmounts");

                    b.Navigation("IngredientPrices");
                });

            modelBuilder.Entity("SmartRecipes.Server.DataContext.Recipes.Models.Recipe", b =>
                {
                    b.Navigation("IngredientAmounts");

                    b.Navigation("RecipeImage");
                });

            modelBuilder.Entity("SmartRecipes.Server.DataContext.Recipes.Models.Shop", b =>
                {
                    b.Navigation("IngredientPrices");
                });
#pragma warning restore 612, 618
        }
    }
}
